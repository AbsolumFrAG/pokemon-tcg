<%- include('../partials/header') %>

<div class="min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-2xl mx-auto">
        <!-- En-tête -->
        <div class="text-center mb-8">
            <h1 class="text-3xl font-extrabold text-gray-900">
                Modifier la carte <%= card.name %>
            </h1>
            <p class="mt-2 text-sm text-gray-600">
                Modifiez les informations de la carte
            </p>
        </div>

        <!-- Formulaire d'édition -->
        <form action="/cards/<%= card._id %>?_method=PUT" method="POST" class="space-y-6 bg-white p-6 rounded-lg shadow">
            <!-- Informations de base -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Nom -->
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700">
                        Nom du Pokémon
                    </label>
                    <input 
                        type="text"
                        id="name"
                        name="name"
                        required
                        value="<%= card.name %>"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    >
                </div>

                <!-- Type -->
                <div>
                    <label for="type" class="block text-sm font-medium text-gray-700">
                        Type
                    </label>
                    <select 
                        id="type"
                        name="type"
                        required
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    >
                        <% const types = ['Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Fighting', 'Normal'] %>
                        <% types.forEach(type => { %>
                            <option value="<%= type %>" <%= card.type === type ? 'selected' : '' %>>
                                <%= type %>
                            </option>
                        <% }) %>
                    </select>
                </div>

                <!-- Points de vie -->
                <div>
                    <label for="hp" class="block text-sm font-medium text-gray-700">
                        Points de vie (HP)
                    </label>
                    <input 
                        type="number"
                        id="hp"
                        name="hp"
                        required
                        min="1"
                        max="300"
                        value="<%= card.hp %>"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    >
                </div>

                <!-- Rareté -->
                <div>
                    <label for="rarity" class="block text-sm font-medium text-gray-700">
                        Rareté
                    </label>
                    <select 
                        id="rarity"
                        name="rarity"
                        required
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    >
                        <% const rarities = ['Common', 'Uncommon', 'Rare', 'Ultra Rare', 'Secret Rare'] %>
                        <% rarities.forEach(rarity => { %>
                            <option value="<%= rarity %>" <%= card.rarity === rarity ? 'selected' : '' %>>
                                <%= rarity %>
                            </option>
                        <% }) %>
                    </select>
                </div>
            </div>

            <!-- Section des attaques -->
            <div class="space-y-4">
                <h3 class="text-lg font-medium text-gray-900">Attaques</h3>
                <div id="attacks-container" class="space-y-4">
                    <% card.attacks.forEach((attack, index) => { %>
                        <div class="attack-entry border rounded-md p-4">
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Nom de l'attaque</label>
                                    <input 
                                        type="text"
                                        name="attacks[<%= index %>][name]"
                                        required
                                        value="<%= attack.name %>"
                                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                                    >
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Dégâts</label>
                                    <input 
                                        type="number"
                                        name="attacks[<%= index %>][damage]"
                                        required
                                        min="0"
                                        max="300"
                                        value="<%= attack.damage %>"
                                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                                    >
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Coût en énergie</label>
                                    <select 
                                        name="attacks[<%= index %>][cost][]"
                                        multiple
                                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                                    >
                                        <% const energyTypes = ['Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Fighting', 'Normal', 'Colorless'] %>
                                        <% energyTypes.forEach(energyType => { %>
                                            <option 
                                                value="<%= energyType %>"
                                                <%= attack.cost.includes(energyType) ? 'selected' : '' %>
                                            >
                                                <%= energyType %>
                                            </option>
                                        <% }) %>
                                    </select>
                                </div>
                            </div>
                            <button 
                                type="button"
                                onclick="removeAttack(this)"
                                class="mt-2 text-red-600 hover:text-red-800"
                            >
                                <i class="fas fa-trash"></i> Supprimer l'attaque
                            </button>
                        </div>
                    <% }) %>
                </div>
                <button 
                    type="button"
                    onclick="addAttack()"
                    class="mt-2 px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-600 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                >
                    + Ajouter une attaque
                </button>
            </div>

            <!-- Faiblesse et Résistance -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="weakness" class="block text-sm font-medium text-gray-700">
                        Faiblesse
                    </label>
                    <select 
                        id="weakness"
                        name="weakness"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 indigo-500"
                    >
                        <option value="">Aucune faiblesse</option>
                        <% types.forEach(type => { %>
                            <option value="<%= type %>" <%= card.weakness === type ? 'selected' : '' %>>
                                <%= type %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                <div>
                    <label for="resistance" class="block text-sm font-medium text-gray-700">
                        Résistance
                    </label>
                    <select 
                        id="resistance"
                        name="resistance"
                        class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    >
                        <option value="">Aucune résistance</option>
                        <% types.forEach(type => { %>
                            <option value="<%= type %>" <%= card.resistance === type ? 'selected' : '' %>>
                                <%= type %>
                            </option>
                        <% }) %>
                    </select>
                </div>
            </div>

            <!-- Coût de retraite -->
            <div>
                <label for="retreatCost" class="block text-sm font-medium text-gray-700">
                    Coût de retraite
                </label>
                <input 
                    type="number"
                    id="retreatCost"
                    name="retreatCost"
                    required
                    min="0"
                    max="4"
                    value="<%= card.retreatCost %>"
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                >
            </div>

            <!-- URL de l'image -->
            <div>
                <label for="imageUrl" class="block text-sm font-medium text-gray-700">
                    URL de l'image
                </label>
                <input 
                    type="url"
                    id="imageUrl"
                    name="imageUrl"
                    value="<%= card.imageUrl %>"
                    class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                >
                <% if (card.imageUrl) { %>
                    <div class="mt-2">
                        <img src="<%= card.imageUrl %>" alt="<%= card.name %>" class="w-32 h-32 object-contain">
                    </div>
                <% } %>
            </div>

            <!-- Boutons d'action -->
            <div class="flex justify-between">
                <button 
                    type="button"
                    onclick="confirmDelete('<%= card._id %>')"
                    class="px-4 py-2 border border-red-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                >
                    Supprimer la carte
                </button>
                <div class="space-x-4">
                    <a 
                        href="/cards/<%= card._id %>"
                        class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                        Annuler
                    </a>
                    <button 
                        type="submit"
                        class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                        Sauvegarder les modifications
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Script pour la gestion des attaques et la validation -->
<script>
    // Injection des variables EJS de manière sécurisée
    window.userCoins = '<%- typeof user !== "undefined" && user ? user.coins : 0 %>';
    window.userRole = '<%- typeof user !== "undefined" && user ? user.role : "" %>';

    // Code JavaScript normal
    let attackCount = 1;

    function togglePasswordVisibility(inputId) {
        const input = document.getElementById(inputId);
        const icon = event.currentTarget.querySelector('i');
        
        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    }

    function addAttack() {
        if (attackCount >= 4) {
            alert('Une carte ne peut pas avoir plus de 4 attaques.');
            return;
        }

        const container = document.getElementById('attacks-container');
        const template = container.querySelector('.attack-entry').cloneNode(true);
        
        // Mise à jour des noms des champs
        template.querySelectorAll('input, select').forEach(input => {
            input.name = input.name.replace('[0]', `[${attackCount}]`);
            input.value = '';
        });

        container.appendChild(template);
        attackCount++;
    }

    // Validation du formulaire
    document.querySelector('form').addEventListener('submit', function(e) {
        const type = document.getElementById('type').value;
        const weakness = document.getElementById('weakness').value;
        const resistance = document.getElementById('resistance').value;

        if (weakness === resistance && weakness !== '') {
            e.preventDefault();
            alert('La faiblesse ne peut pas être la même que la résistance.');
            return;
        }

        // Validation des attaques
        const attacks = document.querySelectorAll('.attack-entry');
        const attackNames = new Set();
        
        attacks.forEach(attack => {
            const name = attack.querySelector('input[name$="[name]"]').value;
            if (attackNames.has(name)) {
                e.preventDefault();
                alert('Les noms des attaques doivent être uniques.');
                return;
            }
            attackNames.add(name);
        });
    });
</script>


<%- include('../partials/footer') %>
