<%- contentFor('head') %>
<title>Liste des cartes</title>

<%- contentFor('body') %>
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <div class="flex justify-between items-center mb-6">
    <h1 class="text-3xl font-bold">Cartes Pokémon</h1>
    <div class="flex space-x-4">
      <a href="/cards/collection" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
        Ma Collection
      </a>
      <% if (locals.user?.role === 'admin') { %>
        <a href="/cards/new" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
          Ajouter une carte
        </a>
      <% } %>
    </div>
  </div>

  <!-- Filtres -->
  <div class="bg-white p-4 rounded shadow mb-6">
    <form id="filterForm" class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <div>
        <label class="block text-sm font-medium text-gray-700">Type</label>
        <select name="type" class="mt-1 block w-full rounded border-gray-300">
          <option value="">Tous</option>
          <% ['Grass', 'Fire', 'Water', 'Lightning', 'Fighting', 'Psychic', 'Colorless'].forEach(type => { %>
            <option value="<%= type %>" <%= locals.filters?.type === type ? 'selected' : '' %>><%= type %></option>
          <% }) %>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700">Rareté</label>
        <select name="rarity" class="mt-1 block w-full rounded border-gray-300">
          <option value="">Toutes</option>
          <% ['Common', 'Uncommon', 'Rare', 'Ultra Rare', 'Secret Rare'].forEach(rarity => { %>
            <option value="<%= rarity %>" <%= locals.filters?.rarity === rarity ? 'selected' : '' %>><%= rarity %></option>
          <% }) %>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700">Recherche</label>
        <input type="text" name="name" value="<%= locals.filters?.name || '' %>" 
          placeholder="Nom de la carte" 
          class="mt-1 block w-full rounded border-gray-300">
      </div>
      <div class="flex items-end">
        <button type="submit" 
          class="w-full bg-gray-50 text-gray-800 px-4 py-2 rounded hover:bg-gray-100">
          Filtrer
        </button>
      </div>
    </form>
  </div>

  <!-- Liste des cartes -->
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
    <% cards.forEach(card => { %>
      <div class="bg-white rounded-lg shadow overflow-hidden group hover:shadow-lg transition-all">
        <div class="relative">
          <img src="<%= card.imageUrl %>" alt="<%= card.name %>" 
            class="w-full aspect-[3/4] object-cover">
          
          <!-- Overlay au survol -->
          <div class="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 
                      transition-opacity flex items-center justify-center">
            <div class="space-y-2 text-center">
              <a href="/cards/<%= card._id %>" 
                 class="inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                Voir détails
              </a>
              <% if (locals.user?.role === 'admin') { %>
                <div class="flex justify-center space-x-2 mt-2">
                  <a href="/cards/<%= card._id %>/edit" 
                     class="bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700">
                    Modifier
                  </a>
                  <button onclick="deleteCard('<%= card._id %>')" 
                          class="bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700">
                    Supprimer
                  </button>
                </div>
              <% } %>
            </div>
          </div>
        </div>

        <div class="p-4">
          <div class="flex justify-between items-start mb-2">
            <h3 class="text-lg font-bold truncate"><%= card.name %></h3>
            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium
              <%= card.type === 'Fire' ? 'bg-red-100 text-red-800' : 
                  card.type === 'Water' ? 'bg-blue-100 text-blue-800' :
                  card.type === 'Grass' ? 'bg-green-100 text-green-800' :
                  card.type === 'Lightning' ? 'bg-yellow-100 text-yellow-800' :
                  card.type === 'Fighting' ? 'bg-red-100 text-red-800' :
                  card.type === 'Psychic' ? 'bg-purple-100 text-purple-800' : 
                  'bg-gray-100 text-gray-800' %>">
              <%= card.type %>
            </span>
          </div>
          <div class="text-sm text-gray-600">
            <p>HP: <%= card.hp %></p>
            <p>Rareté: <%= card.rarity %></p>
          </div>
        </div>
      </div>
    <% }) %>
  </div>

  <!-- Pagination -->
  <% if (pagination.pages > 1) { %>
    <div class="flex justify-center mt-8 space-x-2">
      <% for(let i = 1; i <= pagination.pages; i++) { %>
        <a href="?page=<%= i %><%= filters ? '&' + new URLSearchParams(filters).toString() : '' %>" 
          class="px-3 py-2 rounded <%= pagination.page === i ? 'bg-blue-600 text-white' : 'bg-gray-100 hover:bg-gray-200' %>">
          <%= i %>
        </a>
      <% } %>
    </div>
  <% } %>
</div>

<%- contentFor('scripts') %>
<script>
async function deleteCard(id) {
  if (!confirm('Voulez-vous vraiment supprimer cette carte ?')) return;

  try {
    const response = await fetch(`/cards/${id}`, {
      method: 'DELETE',
      credentials: 'include'
    });

    if (!response.ok) throw new Error('Erreur lors de la suppression');
    window.location.reload();
  } catch (error) {
    console.error('Erreur:', error);
    alert('Une erreur est survenue lors de la suppression de la carte');
  }
}

document.getElementById('filterForm').addEventListener('submit', (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  const params = new URLSearchParams();
  
  for (const [key, value] of formData.entries()) {
    if (value) params.append(key, value);
  }
  
  window.location.href = `/cards?${params.toString()}`;
});
</script>